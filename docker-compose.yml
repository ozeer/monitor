version: '3'
# 网络配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}
# 服务容器配置
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # volumes:
    #   - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - backend
    restart: on-failure
    # command: --web.enable-lifecycle
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - backend
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - 9100:9100
    networks:
      - backend
  redis_exporter:
    image: oliver006/redis_exporter
    container_name: redis_exporter
    command: redis-server /etc/redis/redis.conf --appendonly yes --requirepass "${REDIS_PASSWORD}"
    environment:
      - TZ=${TZ}
    ports:
      - "${REDIS_PORT}:9121"
    networks:
      - backend
    restart: on-failure
  mysql_exporter:
    image: prom/mysqld-exporter
    container_name: mysql_exporter
    environment:
      - DATA_SOURCE_NAME=root:123456@(127.0.0.1:3306)/
    ports:
      - 9102:9104
    networks:
      - backend
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - ./cadvisor/:/rootfs:ro
      - ./cadvisor/run:/var/run:rw
      - ./cadvisor/sys:/sys:ro
      - ./cadvisor/docker/:/var/lib/docker:ro
    ports:
      - 9103:8080
    networks:
      - backend
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - 9104:9093
    networks:
      - backend
